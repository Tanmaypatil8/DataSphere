import pandas as pd
from sklearn.datasets import load_iris
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.svm import SVC

iris = load_iris()
dir(iris)
iris.feature_names
df = pd.DataFrame(iris.data, columns=iris.feature_names)


df['target'] = iris.target

df[df.target==1].head()
df[df.target==2].head()


df['flower_name'] =df.target.apply(lambda x: iris.target_names[x])
df.head()

print(df[45:55])
df0 = df[:50]
df1 = df[50:100]
df2 = df[100:]

plt.xlabel('Sepal Length')
plt.ylabel('Sepal Width')
plt.scatter(df0['sepal length (cm)'], df0['sepal width (cm)'],color="green",marker='+')
plt.scatter(df1['sepal length (cm)'], df1['sepal width (cm)'],color="blue",marker='.')
# plt.show()

plt.xlabel('Petal Length')
plt.ylabel('Petal Width')
plt.scatter(df0['petal length (cm)'], df0['petal width (cm)'],color="green",marker='+')
plt.scatter(df1['petal length (cm)'], df1['petal width (cm)'],color="blue",marker='.')
# plt.show()

X = df.drop(['target','flower_name'], axis='columns')
y = df.target

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)
model = SVC()
model.fit(X_train, y_train)
print("model accuracy:",model.score(X_test, y_test))


sample_data = pd.DataFrame([[4.8,3.0,1.5,0.3]], columns=X.columns)
print("prediction:",model.predict(sample_data))


# Tune parameters
# 1. Regularization (C)

model_C = SVC(C=1)
model_C.fit(X_train, y_train)
print("1. Regularization (C):",model_C.score(X_test, y_test))

model_C = SVC(C=10)
model_C.fit(X_train, y_train)
model_C.score(X_test, y_test)
print("2. Regularization (C):",model_C.score(X_test, y_test))


# 2. Gamma

model_g = SVC(gamma=10)
model_g.fit(X_train, y_train)
model_g.score(X_test, y_test)
print("1. Gamma:",model_g.score(X_test, y_test))


# 3. Kernel

model_linear_kernal = SVC(kernel='linear')
model_linear_kernal.fit(X_train, y_train)
print("1. Kernel:",model_linear_kernal.score(X_test, y_test))